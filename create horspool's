#define MAX_CHAR 256

// Function to perform preprocessing for the Bad Character Heuristic

void preprocessBadChar(char* pattern, int patternLength, int badCharShift[MAX_CHAR]) {
    int i;

@@ -15,15 +15,11 @@ void preprocessBadChar(char* pattern, int patternLength, int badCharShift[MAX_CH
        badCharShift[(int)pattern[i]] = patternLength - i - 1;
    }
}

// Function to perform Horspool's string matching
void horspoolSearch(char* text, char* pattern) {
    int textLength = strlen(text);
    int patternLength = strlen(pattern);
    int badCharShift[MAX_CHAR];
    int i = patternLength - 1;

    // Preprocess the bad character shift table
    preprocessBadChar(pattern, patternLength, badCharShift);

    while (i < textLength) {
@@ -34,13 +30,11 @@ void horspoolSearch(char* text, char* pattern) {
        }

        if (j == patternLength) {
            // Pattern found at index i - patternLength + 1
            printf("Pattern found at index %d\n", i - patternLength + 1);

            // Shift based on bad character heuristic
            i += patternLength - 1;
        } else {
            // Shift based on bad character heuristic

            i += badCharShift[(int)text[i]];
        }
    }
